{
  "PingUnit.Centimeters|block": "cm",
  "valon.Dir.CCW|block": "Backward",
  "valon.Dir.CW|block": "Forward",
  "valon.EyesColors.Black|block": "black",
  "valon.EyesColors.Blue|block": "blue",
  "valon.EyesColors.Green|block": "green",
  "valon.EyesColors.Indigo|block": "indigo",
  "valon.EyesColors.Orange|block": "orange",
  "valon.EyesColors.Purple|block": "purple",
  "valon.EyesColors.Red|block": "red",
  "valon.EyesColors.Violet|block": "violet",
  "valon.EyesColors.White|block": "white",
  "valon.EyesColors.Yellow|block": "yellow",
  "valon.EyesMode.RGBW|block": "RGB+W",
  "valon.EyesMode.RGB_RGB|block": "RGB",
  "valon.EyesMode.RGB|block": "GRB",
  "valon.IrButton.Any|block": "Any",
  "valon.IrButton.UP|block": "↑",
  "valon.IrButton.DOWN|block": "↓",
  "valon.IrButton.LEFT|block": "←",
  "valon.IrButton.RIGHT|block": "→",
  "valon.IrButton.M1|block": "M1",
  "valon.IrButton.M2​​|block": "M2",
  "valon.IrButton.A|block": "A",
  "valon.IrButton.B|block": "B",
  "valon.IrButton.Mini_A|block": "A",
  "valon.IrButton.Mini_B|block": "B",
  "valon.IrButton.Mini_C|block": "C",
  "valon.IrButton.Mini_D|block": "D",
  "valon.IrButton.Mini_UP|block": "︿",
  "valon.IrButton.Mini_E|block": "E",
  "valon.IrButton.Mini_Left|block": "＜",
  "valon.IrButton.Mini_SET|block": "۞",
  "valon.IrButton.Mini_Right|block": "＞",
  "valon.IrButton.Number_0|block": "0",
  "valon.IrButton.Mini_Down|block": "﹀",
  "valon.IrButton.Mini_F|block": "F",
  "valon.IrButton.Number_1|block": "1",
  "valon.IrButton.Number_2|block": "2",
  "valon.IrButton.Number_3|block": "3",
  "valon.IrButton.Number_4|block": "4",
  "valon.IrButton.Number_5|block": "5",
  "valon.IrButton.Number_6|block": "6",
  "valon.IrButton.Number_7|block": "7",
  "valon.IrButton.Number_8|block": "8",
  "valon.IrButton.Number_9|block": "9",
  "valon.IrButtonAction.Pressed|block": "pressed",
  "valon.IrButtonAction.Released|block": "released",
  "valon.IrProtocol.Keyestudio|block": "Keyestudio",
  "valon.IrProtocol.NEC|block": "NEC",
  "valon.LED.LEDLeft|block": "left",
  "valon.LED.LEDRight|block": "right",
  "valon.LED.LEDAll|block": "all",
  "valon.LEDswitch.turnOff|block": "OFF",
  "valon.LEDswitch.turnOn|block": "ON",
  "valon.Motors.MAll|block": "all",
  "valon.Motors.ML|block": "left",
  "valon.Motors.MR|block": "right",
  "valon.PatrolEnable.PatrolOn|block": "Enable",
  "valon.PatrolEnable.PatrolOff|block": "Disable",
  "valon.Patrol.PatrolLeft|block": "left",
  "valon.Patrol.PatrolMiddle|block": "middle",
  "valon.Patrol.PatrolRight|block": "right",
  "valon.RGBEYES.EyesAll|block": "all",
  "valon.RGBEYES.EyesLeft|block": "left",
  "valon.RGBEYES.EyesRight|block": "right",
  "valon.Strip.clear|block": "%eyes|clear",
  "valon.Strip.setBrightness|block": "%eyes|set brightness %brightness",
  "valon.Strip.setEyesColor|block": "%eyes|show color at %eyes_n|to %rgb=neopixel_colors",
  "valon.Strip.setPixelColor|block": "%eyes|set pixel color at %pixeloffset|to %rgb=neopixel_colors",
  "valon.Strip.showColor|block": "%eyes|show color %rgb=neopixel_colors",
  "valon.Strip.show|block": "%eyes|show",
  "valon.Ultrasonic|block": "read ultrasonic sensor |%unit ",
  "valon.colors|block": "%color",
  "valon.connectIrReceiver|block": "connect IR receiver at pin %pin and decode %protocol",
  "valon.create|block": "RGBEyes init %numleds|leds as %mode",
  "valon.hsl|block": "hue %h|saturation %s|luminosity %l",
  "valon.irButtonCode|block": "IR button code %button",
  "valon.irButton|block": "IR button",
  "valon.motorRun|block": "motor|%index|move|%direction|at speed|%speed",
  "valon.motorStop|block": "motor |%motor stop",
  "valon.onIrButton|block": "on IR button | %button | %action",
  "valon.enablePatrol|block": "%enable line tracking sensor",
  "valon.readPatrol|block": "read %patrol line tracking sensor",
  "valon.rgb|block": "red %red|green %green|blue %blue",
  "valon.wasAnyIrButtonPressed|block": "any IR button was pressed",
  "valon.writeLED|block": "LEDlight |%ledn turn |%ledswitch",
  "valon|block": "Valon",
  "{id:category}Valon": "Valon",
  "{id:subcategory}IR Receiver": "IR Receiver"
}